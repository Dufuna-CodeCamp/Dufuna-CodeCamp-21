{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-09T09:27:09.869Z",
    "end": "2022-03-09T09:30:10.939Z",
    "duration": 181070,
    "testsRegistered": 18,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 18,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "edf6d083-6bbc-4211-9dee-ceafa950973f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2025a245-b7cc-475d-99e3-87581d640a00",
          "title": "Testing Scholars Project",
          "fullFile": "C:\\Users\\olada\\Documents\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js",
          "file": "\\landing_page.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "timedOut": true,
              "duration": 180014,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {
                "message": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\olada\\Documents\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js)",
                "estack": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\olada\\Documents\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                "diff": null
              },
              "uuid": "9ad15010-c44d-4fb5-9528-ca475ecda94c",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "fd2e5616-6719-4e5b-86cb-99876ef5e862",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "335b58c0-b9ae-455a-9be2-8a8e7a5d80c6",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "7720539c-554d-4560-a775-089cbb88cc08",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "0e69ac8a-6011-4bbf-bff5-c7dbbfbde81f",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "747f57a6-3a8d-43ad-a2e0-d2e5f4e71b92",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "e1d091c6-c21a-46b8-805d-d7171a23d458",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Sign up",
              "fullTitle": "Testing Scholars Project test case: check Sign up",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Sign up\", \"Ensure the `Sign up` link is present on the header\");",
              "err": {},
              "uuid": "1e925b0c-4733-48c4-abaa-b94a43cc8083",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-descrption1",
              "fullTitle": "Testing Scholars Project test case: check service-descrption1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Pick an interest\", \"Ensure Quantity label is present\");",
              "err": {},
              "uuid": "3f4509ab-8e9b-4fa5-97f4-4711db265f76",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-description2",
              "fullTitle": "Testing Scholars Project test case: check service-description2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"How we serve you\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "3dd5b9a2-7885-49ce-831d-72bebbd4e869",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service title-1",
              "fullTitle": "Testing Scholars Project test case: check service title-1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us where you are\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "4b5a74e6-9f1e-4d2d-ada0-331dab0efb91",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-title-2",
              "fullTitle": "Testing Scholars Project test case: check service-title-2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us what you want\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "0141f136-3b78-410b-ad23-1d969259d5a5",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-title-3",
              "fullTitle": "Testing Scholars Project test case: check service-title-3",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"We'll come running\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "8bd46932-65b7-4bad-817e-762e808aef96",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check footer",
              "fullTitle": "Testing Scholars Project test case: check footer",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Contact us\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "7224c82d-0b3f-4f45-8c8c-6ac66a22df58",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check terms & conditions on footer",
              "fullTitle": "Testing Scholars Project test case: check terms & conditions on footer",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Terms & Conditions . Privacy Policy\", \"Ensure the texts on the footer is properly formated\");",
              "err": {},
              "uuid": "d1a36022-a4f3-4360-a626-4dec32d37f68",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check copyright on footer",
              "fullTitle": "Testing Scholars Project test case: check copyright on footer",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Copyright 2021 FoodBag is a registered trademark\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "8e9d0b6e-e029-4bb4-b76c-8708020b9770",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check input field",
              "fullTitle": "Testing Scholars Project test case: check input field",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 1, `Ensure you have the input field as seen in the mock-up`);",
              "err": {},
              "uuid": "9db5c488-7ef7-4af6-a775-84bb20b68115",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check placeholder",
              "fullTitle": "Testing Scholars Project test case: check placeholder",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('placeholder');\nassert.equal(element, \"Enter your delivery address\", `Ensure you have the placeholder as seen in the mock-up`);",
              "err": {},
              "uuid": "87a5e4a5-56dc-486e-a5d0-cb94846226ed",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check label of input-field",
              "fullTitle": "Testing Scholars Project test case: check label of input-field",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('body')).getText();\nassert.include(element, \"Where are you?\", `Ensure you have the input field as the appropriate label as seen in the mock-up`);",
              "err": {},
              "uuid": "a8cfce50-5a38-4449-814c-ff3c9aa2ba36",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: assert image amount is 10",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 10",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "c151275c-3642-47d4-934e-f5f16cc9b16b",
              "parentUUID": "2025a245-b7cc-475d-99e3-87581d640a00",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "335b58c0-b9ae-455a-9be2-8a8e7a5d80c6",
            "7720539c-554d-4560-a775-089cbb88cc08",
            "0e69ac8a-6011-4bbf-bff5-c7dbbfbde81f",
            "747f57a6-3a8d-43ad-a2e0-d2e5f4e71b92",
            "e1d091c6-c21a-46b8-805d-d7171a23d458",
            "1e925b0c-4733-48c4-abaa-b94a43cc8083",
            "3f4509ab-8e9b-4fa5-97f4-4711db265f76",
            "3dd5b9a2-7885-49ce-831d-72bebbd4e869",
            "4b5a74e6-9f1e-4d2d-ada0-331dab0efb91",
            "0141f136-3b78-410b-ad23-1d969259d5a5",
            "8bd46932-65b7-4bad-817e-762e808aef96",
            "7224c82d-0b3f-4f45-8c8c-6ac66a22df58",
            "d1a36022-a4f3-4360-a626-4dec32d37f68",
            "8e9d0b6e-e029-4bb4-b76c-8708020b9770",
            "9db5c488-7ef7-4af6-a775-84bb20b68115",
            "87a5e4a5-56dc-486e-a5d0-cb94846226ed",
            "a8cfce50-5a38-4449-814c-ff3c9aa2ba36",
            "c151275c-3642-47d4-934e-f5f16cc9b16b"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/olada/Documents/Dufuna-CodeCamp-21/tests/landing_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.0.1"
    }
  }
}