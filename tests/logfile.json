{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-19T05:36:16.113Z",
    "end": "2022-11-19T05:39:16.146Z",
    "duration": 180033,
    "testsRegistered": 18,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 18,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "df9156fa-ac70-454d-9b0c-be63d66fe9f5",
      "title": "",
      "fullFile": "C:\\Users\\1\\Desktop\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js",
      "file": "\\landing_page.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "052e3138-ea60-401f-8b9a-23561b687078",
          "title": "Testing Scholars Project",
          "fullFile": "C:\\Users\\1\\Desktop\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js",
          "file": "\\landing_page.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "timedOut": true,
              "duration": 180020,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {
                "message": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\1\\Desktop\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js)",
                "estack": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\1\\Desktop\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                "diff": null
              },
              "uuid": "28b9c125-047b-42e9-a16b-3ec8fc235bc7",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "377cff70-3bde-4267-9b52-9602e0687fde",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "219f18f3-cd4e-4609-9fc1-bb8f49546282",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "971527e4-4a66-4e70-a929-5ac389b39305",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "e0326422-f998-4af7-92c8-2e668b2f4b0c",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "030dc46b-43dc-4b9d-82e6-e0c3c72999dd",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "0073a1fd-f5c6-4783-a3d0-686b8fdcad4a",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Sign up",
              "fullTitle": "Testing Scholars Project test case: check Sign up",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Sign up\", \"Ensure the `Sign up` link is present on the header\");",
              "err": {},
              "uuid": "35f94905-1d0d-424f-96a4-51b97b6a7b08",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-descrption1",
              "fullTitle": "Testing Scholars Project test case: check service-descrption1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Pick an interest\", \"Ensure Quantity label is present\");",
              "err": {},
              "uuid": "f7d08493-d92c-4ee2-bf11-c072528590af",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-description2",
              "fullTitle": "Testing Scholars Project test case: check service-description2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"How we serve you\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "eb7ff815-f137-4f55-9aef-61600abe4790",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service title-1",
              "fullTitle": "Testing Scholars Project test case: check service title-1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us where you are\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "55555db9-8470-46c1-ab43-996e8c3d0449",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-title-2",
              "fullTitle": "Testing Scholars Project test case: check service-title-2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us what you want\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "cd9c1ae0-6fdb-45ac-91ea-95b4d32f6f26",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-title-3",
              "fullTitle": "Testing Scholars Project test case: check service-title-3",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"We'll come running\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "9b3c79c3-6b06-4455-9600-9debc11a547e",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check footer",
              "fullTitle": "Testing Scholars Project test case: check footer",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Contact us\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "26b4dd21-d09b-40b4-8cb9-f535befde2ce",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check terms & conditions on footer",
              "fullTitle": "Testing Scholars Project test case: check terms & conditions on footer",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Terms & Conditions . Privacy Policy\", \"Ensure the texts on the footer is properly formated\");",
              "err": {},
              "uuid": "569d1c2b-f51c-4550-9a2d-f24c63309c68",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check copyright on footer",
              "fullTitle": "Testing Scholars Project test case: check copyright on footer",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Copyright 2021 FoodBag is a registered trademark\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "993a7883-da65-43b8-a308-08fb9ff5a8df",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check input field",
              "fullTitle": "Testing Scholars Project test case: check input field",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 1, `Ensure you have the input field as seen in the mock-up`);",
              "err": {},
              "uuid": "70972731-4431-4a3f-a12b-17fb198d2e7d",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check placeholder",
              "fullTitle": "Testing Scholars Project test case: check placeholder",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('placeholder');\nassert.equal(element, \"Enter your delivery address\", `Ensure you have the placeholder as seen in the mock-up`);",
              "err": {},
              "uuid": "f340eb93-84f7-49a0-aa1b-8375d579ac44",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check label of input-field",
              "fullTitle": "Testing Scholars Project test case: check label of input-field",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('body')).getText();\nassert.include(element, \"Where are you?\", `Ensure you have the input field as the appropriate label as seen in the mock-up`);",
              "err": {},
              "uuid": "963c5516-d395-4151-a101-cbb954a3567d",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: assert image amount is 10",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 10",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "109862cb-8a19-4434-8efe-cb0c538d3913",
              "parentUUID": "052e3138-ea60-401f-8b9a-23561b687078",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "219f18f3-cd4e-4609-9fc1-bb8f49546282",
            "971527e4-4a66-4e70-a929-5ac389b39305",
            "e0326422-f998-4af7-92c8-2e668b2f4b0c",
            "030dc46b-43dc-4b9d-82e6-e0c3c72999dd",
            "0073a1fd-f5c6-4783-a3d0-686b8fdcad4a",
            "35f94905-1d0d-424f-96a4-51b97b6a7b08",
            "f7d08493-d92c-4ee2-bf11-c072528590af",
            "eb7ff815-f137-4f55-9aef-61600abe4790",
            "55555db9-8470-46c1-ab43-996e8c3d0449",
            "cd9c1ae0-6fdb-45ac-91ea-95b4d32f6f26",
            "9b3c79c3-6b06-4455-9600-9debc11a547e",
            "26b4dd21-d09b-40b4-8cb9-f535befde2ce",
            "569d1c2b-f51c-4550-9a2d-f24c63309c68",
            "993a7883-da65-43b8-a308-08fb9ff5a8df",
            "70972731-4431-4a3f-a12b-17fb198d2e7d",
            "f340eb93-84f7-49a0-aa1b-8375d579ac44",
            "963c5516-d395-4151-a101-cbb954a3567d",
            "109862cb-8a19-4434-8efe-cb0c538d3913"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/1/Desktop/Dufuna-CodeCamp-21/tests/landing_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.2.0"
    }
  }
}