<<<<<<< HEAD
{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":1,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":1,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1662028889982,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"renders without crashing","location":null,"status":"passed","title":"renders without crashing"}],"endTime":1662028896164,"message":"","name":"C:\\Users\\Jahbuchi\\Desktop\\2021\\Dufuna-CodeCamp-21\\submissions\\mauriceOkeke\\REACT\\react-app\\src\\__tests__\\App.test.js","startTime":1662028892114,"status":"passed","summary":""}],"wasInterrupted":false}
=======
{
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-01T15:38:16.658Z",
    "end": "2022-09-01T15:38:31.506Z",
    "duration": 14848,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cb102a29-7132-4a25-97f3-59f6d8a45b20",
      "title": "",
      "fullFile": "C:\\Users\\Seed\\desktop\\Dufuna-CodeCamp-21\\tests\\add_navigation_links\\navigation_tasks.js",
      "file": "\\navigation_tasks.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9fa18b0c-df55-47c6-b7f5-d4153c274918",
          "title": "Testing Navigation on HtmlForms",
          "fullFile": "C:\\Users\\Seed\\desktop\\Dufuna-CodeCamp-21\\tests\\add_navigation_links\\navigation_tasks.js",
          "file": "\\navigation_tasks.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver in \"Testing Navigation on HtmlForms\"",
              "fullTitle": "Testing Navigation on HtmlForms \"before all\" hook: setupWebdriver in \"Testing Navigation on HtmlForms\"",
              "timedOut": false,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,

              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done)",
              "err": {},
              "uuid": "9b94cc68-1c25-4e89-8f00-18c745545b94",
              "parentUUID": "9fa18b0c-df55-47c6-b7f5-d4153c274918",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Navigation on HtmlForms\"",
              "fullTitle": "Testing Navigation on HtmlForms \"after all\" hook in \"Testing Navigation on HtmlForms\"",
              "timedOut": false,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit()",
              "err": {},
              "uuid": "c571958a-42b6-4216-8bda-dcb29335d6cc",
              "parentUUID": "9fa18b0c-df55-47c6-b7f5-d4153c274918",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: assert that there are 2 links on this page",
              "fullTitle": "Testing Navigation on HtmlForms test case: assert that there are 2 links on this page",
              "timedOut": false,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const links = await driver.findElements(By.css('a'));\nconst size = links.length;\nassert.equal(size, 2, `Ensure you have two links on this page`);",
              "err": {},
              "uuid": "2614b5ce-4b64-40f0-82cd-e435e5c93936",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 52,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "1e7b8f4f-6a8e-45b4-a641-ea81f0965f39",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "a3f07a8a-c5f3-4aef-88df-6f5ec9a78a60",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "125ffe80-4cb5-4e82-b41b-429ca32893a2",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "571299e4-a512-44b3-bbf4-0577c1d30211",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Sign up",
              "fullTitle": "Testing Scholars Project test case: check Sign up",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Sign up\", \"Ensure the `Sign up` link is present on the header\");",
              "err": {},
              "uuid": "7bf0cfb5-fa33-4ae8-9d77-936283f09a4c",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-descrption1",
              "fullTitle": "Testing Scholars Project test case: check service-descrption1",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Pick an interest\", \"Ensure Quantity label is present\");",
              "err": {},
              "uuid": "9be99080-0cca-4858-b4c6-4d70d319bfe2",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-description2",
              "fullTitle": "Testing Scholars Project test case: check service-description2",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"How we serve you\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "fc6190c0-925c-45d0-a50e-1f6cf5ee09d2",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service title-1",
              "fullTitle": "Testing Scholars Project test case: check service title-1",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us where you are\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "d42af7d3-5a4c-43c6-906e-1e7fe4b0739c",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-2",
              "fullTitle": "Testing Scholars Project test case: check service-title-2",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us what you want\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "52d5ef4e-b7bb-4c68-99f5-5aa456df49ae",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-3",
              "fullTitle": "Testing Scholars Project test case: check service-title-3",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"We'll come running\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "02f30cef-c987-41fa-bdd1-645e9e40000f",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check footer",
              "fullTitle": "Testing Scholars Project test case: check footer",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Contact us\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "59714ea8-7f7a-46c3-a5a5-ef7a4eb363c6",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check terms & conditions on footer",
              "fullTitle": "Testing Scholars Project test case: check terms & conditions on footer",
              "timedOut": false,
              "duration": 31,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Terms & Conditions . Privacy Policy\", \"Ensure the texts on the footer is properly formated\");",
              "err": {
                "message": "AssertionError: Ensure the texts on the footer is properly formated: expected 'Contact us' to include 'Terms & Conditions . Privacy Policy'",
                "estack": "AssertionError: Ensure the texts on the footer is properly formated: expected 'Contact us' to include 'Terms & Conditions . Privacy Policy'\n    at Context.<anonymous> (landing_page.js:97:20)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                "diff": null
              },
              "uuid": "c79d9cf9-148b-45eb-ab21-905959ca349c",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check copyright on footer",
              "fullTitle": "Testing Scholars Project test case: check copyright on footer",
              "timedOut": false,
              "duration": 23,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Copyright 2021 FoodBag is a registered trademark\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {
                "message": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Contact us' to include 'Copyright 2021 FoodBag is a registere…'",
                "estack": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Contact us' to include 'Copyright 2021 FoodBag is a registere…'\n    at Context.<anonymous> (landing_page.js:103:20)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                "diff": null
              },
              "uuid": "b7efc5ea-dd43-4fa1-99d4-d797d5d993cb",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check input field",
              "fullTitle": "Testing Scholars Project test case: check input field",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 1, `Ensure you have the input field as seen in the mock-up`);",
              "err": {},
              "uuid": "001da231-8b4b-48c3-bf23-0cf3450cf4f4",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check placeholder",
              "fullTitle": "Testing Scholars Project test case: check placeholder",
              "timedOut": false,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('placeholder');\nassert.equal(element, \"Enter your delivery address\", `Ensure you have the placeholder as seen in the mock-up`);",
              "err": {},
              "uuid": "b75e2292-b245-45c8-8ab6-fccfbbd67ded",
              "parentUUID": "e957fd0c-8905-493e-a401-8520153aa165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check label of input-field",
              "fullTitle": "Testing Scholars Project test case: check label of input-field",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('body')).getText();\nassert.include(element, \"Where are you?\", `Ensure you have the input field as the appropriate label as seen in the mock-up`);",
              "err": {},
              "uuid": "10c6eea0-108d-4ce4-92bd-62b23a2ef634",
              "parentUUID": "00154974-7a64-401f-82c4-3fdba825888c",
      "uuid": "f12f5346-85df-4310-a18f-21722bda3e04",
              "parentUUID": "9fa18b0c-df55-47c6-b7f5-d4153c274918",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f12f5346-85df-4310-a18f-21722bda3e04"
          ],
          "pending": [],
          "skipped": [],
          "duration": 213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/Seed/desktop/Dufuna-CodeCamp-21/tests/add_navigation_links/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.2.0"
    }
  }
}
>>>>>>> 8716ae02efb5b0d3066e7f67e68cf897febd9ab6
